on:
  push:
    tags:
    - '*'
jobs:
  build-release:
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [
          aarch64-linux-gnu,
          aarch64-linux-musl,
          x86_64-linux-gnu,
          x86_64-linux-musl,
          aarch64-macos,
          x86_64-macos,
          x86_64-windows-gnu,
          x86_64-windows-msvc,
          x86-linux-gnu,
          x86-linux-musl,
          x86-windows,
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
        with:
          version: master
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        if: startsWith(matrix.target, 'x86_64-windows-msvc')
      - run: cargo install --locked xwin
        if: startsWith(matrix.target, 'x86_64-windows-msvc')
      - run: |
          xwin --accept-license --arch x86_64,aarch64 --variant desktop --sdk-version "10.0.20348" \
          splat --include-debug-libs --include-debug-symbols --preserve-ms-arch-notation --output ${{ github.workspace }}/.xwin
        if: startsWith(matrix.target, 'x86_64-windows-msvc')
      - run: zig build -Dtarget=${{ matrix.target }} -Dxwin_path=${{ github.workspace }}/.xwin
      - name: zip artifact
        run: |
          cd zig-out/ && tar -czvf ../lua_${{ matrix.target }}.tar.gz .
      - uses: actions/upload-artifact@v4
        with:
          name: lua_${{ matrix.target }}
          path: |
            ./lua_${{ matrix.target }}.tar.gz
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-release 
    steps:
    - uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "*.tar.gz"
